security:
    encoders:
        # this internal class is used by Symfony to represent in-memory users
        Symfony\Component\Security\Core\User\User: 'auto'

        #App\Entity\User:
            #algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory_users:
            memory:
                users:
                    admin: {
                        password: '$argon2id$v=19$m=65536,t=4,p=1$U2x0b0hvcHdZekdDM0hyUg$wZAtqNM++BTTyfcVxVk90YOFuvRoiwBIhRqYnUrIoWg',
                        roles: ['ROLE_ADMIN', 'ROLE_USER']
                    }

        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: nickname
                
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            form_login:
                login_path: login
                check_path: login
                default_target_path: page
                csrf_token_generator: security.csrf.token_manager
            logout:
                path:   app_logout
            
            # use memory provider for test
            provider: in_memory_users
            #provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
